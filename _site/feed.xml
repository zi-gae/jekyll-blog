<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>지나가던컴공 IT 블로그</title>
    <description>devgw blog
</description>
    <link>http://localhost:4000</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 01 Dec 2019 22:54:52 +0900</pubDate>
    <lastBuildDate>Sun, 01 Dec 2019 22:54:52 +0900</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>django AWS 배포 - S3</title>
        <description>&lt;h2 id=&quot;aws-django-배포-방법-2---s3for-osx-mac&quot;&gt;AWS django 배포 방법 2 - S3(for osX, mac)&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;본게시글은 이어지는 게시글입니다.&lt;/p&gt;

&lt;p&gt;이전 &lt;a href=&quot;/2019/11/20/aws-ec2/&quot;&gt;게시글&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;aws-버킷-생성&quot;&gt;AWS 버킷 생성&lt;/h4&gt;

&lt;p&gt;  1. 아마존 웹 서비스 &lt;a href=&quot;https://aws.amazon.com&quot;&gt;이동&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  2. 로그인 후 서비스에서 S3를 클릭하여 아래의 버튼을 통해 버킷을 생성&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/aws_s3/aws_s3_bucket.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;  3. &lt;code class=&quot;highlighter-rouge&quot;&gt;버킷 이름&lt;/code&gt;을 입력하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;리전&lt;/code&gt;을 아시아 태평양(서울)로 지정 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;다음&lt;/code&gt; 클릭&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/aws_s3/aws_s3_region.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;  4. 옵션 구성은 설정할게없음 &lt;code class=&quot;highlighter-rouge&quot;&gt;다음&lt;/code&gt; 클릭&lt;/p&gt;

&lt;p&gt;  5. 모든 퍼블릭 액세스 차단 체크 되어있으면 해체 후 안에 체크리스트 전부 해제 후 다음 클릭&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/aws_s3/aws_s3_access.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;  6. 다음 버킷만들기 클릭 하여 버킷 생성&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;iam-설정&quot;&gt;IAM 설정&lt;/h4&gt;

&lt;p&gt;  1. 아마존 상단 메뉴에서 서비스 버튼 클릭하여 IAM 클릭&lt;/p&gt;

&lt;p&gt;  2. IAM 페이지로 이동하면 왼쪽에 있는 &lt;code class=&quot;highlighter-rouge&quot;&gt;사용자&lt;/code&gt; 버튼 클릭&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/aws_s3/aws_s3_leftuser.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;  3. &lt;code class=&quot;highlighter-rouge&quot;&gt;사용자 추가&lt;/code&gt;버튼 클릭&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/aws_s3/aws_s3_adduser.png&quot; alt=&quot;&quot; /&gt;
  4. 사용자 이름을 입력하고  액세스 유형은 프로그래밍 방식 엑세스에 체크 &lt;code class=&quot;highlighter-rouge&quot;&gt;다음:권한&lt;/code&gt;버튼 클릭&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/aws_s3/aws_s3_nextauth.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;  5. 사용자에게 권한을 부여하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;그룹 생성&lt;/code&gt; 버튼 클릭하고 그룹 이름을 입력하고 정책 필터에 s3를 입력하면 나오는 목록에서 AmazonS3FullAccess 체크 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;그룹 생성&lt;/code&gt; 버튼 클릭&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/aws_s3/aws_s3_creategroup.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;  6. 생성 완료되고 &lt;code class=&quot;highlighter-rouge&quot;&gt;다음: 검토&lt;/code&gt; 버튼 클릭 내용을 확인하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;사용자 만들기&lt;/code&gt;버튼 클릭&lt;/p&gt;

&lt;p&gt;  7. 생성이 완료된 후 나오는 마지막 페이지에서 엑세스 키는 다시 확인할 방법이 없으므로 액세스 키 ID와 비밀 엑세스 키는 보관하거나 csv 다운로드 버튼을 클릭해 파일로 다운로드&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;장고에서-s3-연동하기&quot;&gt;장고에서 S3 연동하기&lt;/h4&gt;

&lt;p&gt;가상환경으로 진입 후 명령을 입력해 설치&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ pip install boto3
$ pip install django-storages
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;설치한 모듈들을 이용하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;settings.py&lt;/code&gt;에 입력 또는 분리되어있다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;config/settings/base.py&lt;/code&gt; 에 입력&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;INSTALLED_APPS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;err&quot;&gt;‘&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;storages&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;settings.py&lt;/code&gt; 또는 &lt;code class=&quot;highlighter-rouge&quot;&gt;base.py&lt;/code&gt; 맨 아래에 추가&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;AWS_ACCESS_KEY_ID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;‘아마존&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;액세스&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;AWS_SECRET_ACCESS_KEY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;‘아마존&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;액세스&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;비밀키’&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;AWS_REGION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;‘&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;northeast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 아시아 태평양(서울)
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AWS_STORAGE_BUCKET_NAME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;‘&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;S3&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;버킷&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;이름’&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;AWS_S3_CUSTOM_DOMAIN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;‘&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;amazonaws&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AWS_STORAGE_BUCKET_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AWS_REGION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;AWS_S3_OBJECT_PARAMETERS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;err&quot;&gt;‘&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CacheControl&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;‘&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;86400&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DEFAULT_FILE_STORAGE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;‘&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;asset_storage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MediaStorage&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;config 폴더에 &lt;code class=&quot;highlighter-rouge&quot;&gt;asset_storage.py&lt;/code&gt; 라는 파일을 만든 후 다음 코드를 입력&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;storages.backends.s3boto3&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S3Boto3Storage&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MediaStorage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;S3Boto3Storage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;‘&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;media&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# s3 저장경로
&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;file_overwrite&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 이름 그대로
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;게시글이-길어져-database-server-생성은-다음-게시글에서-진행&quot;&gt;게시글이 길어져 Database server 생성은 다음 &lt;a href=&quot;&quot;&gt;게시글&lt;/a&gt;에서 진행&lt;/h5&gt;
</description>
        <pubDate>Thu, 21 Nov 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2019/11/21/aws-s3/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/11/21/aws-s3/</guid>
        
        <category>aws</category>
        
        <category>ec2</category>
        
        <category>s3</category>
        
        
      </item>
    
      <item>
        <title>django AWS 배포 - RDS</title>
        <description>&lt;h2 id=&quot;aws-django-배포-방법-3---rdsfor-osx-mac&quot;&gt;AWS django 배포 방법 3 - rds(for osX, mac)&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;본게시글은 이어지는 게시글입니다.&lt;/p&gt;

&lt;p&gt;이전 &lt;a href=&quot;/2019/11/21/aws-3s/&quot;&gt;게시글&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;aws-버킷-생성&quot;&gt;AWS 버킷 생성&lt;/h4&gt;

&lt;p&gt;  1. 아마존 웹 서비스 &lt;a href=&quot;https://aws.amazon.com&quot;&gt;이동&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  2. 로그인 후 서비스에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;RDS&lt;/code&gt;를 클릭&lt;/p&gt;

&lt;p&gt;  3. RDS 페이지에서 데이터베이스 생성하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;데이터베이스 생성&lt;/code&gt; 클릭&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/aws_rds/aws_rds_create_db.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;  4. 엔진 옵션 &lt;code class=&quot;highlighter-rouge&quot;&gt;PostgreSQL&lt;/code&gt; 선택&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/aws_rds/aws_rds_choice_db.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;  5. 프리티어 선택 &lt;em&gt;프로덕션 선택 시 과금 발생&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/aws_rds/aws_rds_pretier.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;  6. DB 인스턴스 식별자(DB 이름) 마스터 사용자이름, 마스터 암호 설정&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/aws_rds/aws_rds_set_master.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;  7. 연결에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;추가 연결 구성&lt;/code&gt; 클릭&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/aws_rds/aws_rds_connect.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;  8. 기존 VPC 보안 그룹을 인스턴스 그룹으로 연결&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/aws_rds/aws_rds_vpc.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;  9. 맨 밑에 &lt;code class=&quot;highlighter-rouge&quot;&gt;데이터베이스 생성&lt;/code&gt;을 클릭하여 생성&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/aws_rds/aws_rds_create2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;생성 후 EC2 대시보드에 가서 추가 구성에서 설정한 인스턴스랑 연결됬는지  아래 사진처럼 확인 EC2 대시보드 » 네트워크 및 보안 탭 보안 그룹 » 연결한 인스턴스 클릭 » 인바인드 클릭 » 편집 » 소스 입력란에 EC2 그룹 이름 작성하여 연결&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/aws_rds/aws_rds_ec2_connect.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;django-setting&quot;&gt;Django setting&lt;/h3&gt;

&lt;p&gt;생성한 DB 인스턴스를 장고 프로젝트에 연결&lt;/p&gt;

&lt;p&gt;  1. &lt;code class=&quot;highlighter-rouge&quot;&gt;base.py&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;settings.py&lt;/code&gt; 를 열어 DATABASES 변수를 아래와 같이 수정&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# settings.py
# base.py
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DATABASES&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'default'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'ENGINE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'django.db.backends.postgresql'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'HOST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'che1-db.czxnimwgemge.ap-northeast-2.rds.amazonaws.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'PORT'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'5432'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'NAME'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'deploy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'USER'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Che1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'PASSWORD'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'*******'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;•	ENGINE: sqlite3를 postgresql로 바꿔준다.&lt;/p&gt;

&lt;p&gt;•	HOST: 엔드포인트 항목을 복사-붙여넣기 한다.&lt;/p&gt;

&lt;p&gt;•	PORT: 포트 항목을 입력한다.&lt;/p&gt;

&lt;p&gt;•	NAME: DB 이름 항목을 입력한다.&lt;/p&gt;

&lt;p&gt;•	USER: 사용자 이름 항목을 입력한다.&lt;/p&gt;

&lt;p&gt;•	PASSWORD: DB 인스턴스를 생성할 때 설정했던 비밀번호를 입력한다.&lt;/p&gt;

&lt;p&gt;  2. 각각의 항목에 들어가야할 값을 RDS 인스턴스 화면에서 인스턴스를 체크한 뒤 세부 정보 아이콘을 클릭하여 나타나는 창에서 확인 가능&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/aws_rds/aws_rds_dashbord.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 21 Nov 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2019/11/21/aws-rds/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/11/21/aws-rds/</guid>
        
        <category>aws</category>
        
        <category>ec2</category>
        
        <category>s3</category>
        
        
      </item>
    
      <item>
        <title>django AWS 배포 - EC2</title>
        <description>&lt;h2 id=&quot;aws-django-배포-방법-1---ec2for-osx-mac&quot;&gt;AWS django 배포 방법 1 - EC2(for osX, mac)&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;aws-ec2-인스턴스-생성&quot;&gt;AWS EC2 인스턴스 생성&lt;/h4&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;  환경 구축하기&lt;/p&gt;

&lt;p&gt;  1. 아마존 웹 서비스 &lt;a href=&quot;https://aws.amazon.com&quot;&gt;이동&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  2. 로그인 후 서비스에서 EC2를 클릭하여 EC2 인스턴스 생성 페이지로 이동한다.&lt;/p&gt;

&lt;p&gt;  3. 아래의 버튼을 통해 인스턴스를 생성한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/aws_ec2/aws_instance.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;인스턴스 설정은 다음과 같다.&lt;/p&gt;

&lt;p&gt;• Ubuntu Server 18.04로 생성&lt;/p&gt;

&lt;p&gt;• 유형 t2.micro (프리티어) 선택 후, “다음:인스턴스 세부 정보 구성” 클릭&lt;/p&gt;

&lt;p&gt;• “다음: 스토리지 추가” 클릭&lt;/p&gt;

&lt;p&gt;• Storage 20GB (최대 30GB까지 무료) “다음: 태그 추가” 클릭&lt;/p&gt;

&lt;p&gt;• 다음: 보안 그룹 구성” 클릭&lt;/p&gt;

&lt;p&gt;• 보안 그룹 규칙에서 규칙 추가(HTTP, HTTPS) 추가, 사용자 지정TCP 8000(장고 포트) 포트 추가 후 전부 위치무관으로 변경&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h5 id=&quot;설정이-완료되면-아래-사진과-같이-서버-접속을-위한-마스터-키가-되어주는&quot;&gt;설정이 완료되면 아래 사진과 같이 서버 접속을 위한 마스터 키가 되어주는&lt;/h5&gt;
&lt;h5 id=&quot;pem-확장자의-파일을-받는다&quot;&gt;pem 확장자의 파일을 받는다.&lt;/h5&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/aws_ec2/aws_pem.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h5 id=&quot;탄력적-ip로-이동하여-새-주소를-할당-할당된-ip를-인스턴스에-연결하면-서버-초기-설정이-완료된다&quot;&gt;탄력적 IP로 이동하여 새 주소를 할당 할당된 IP를 인스턴스에 연결하면 서버 초기 설정이 완료된다.&lt;/h5&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/aws_ec2/aws_newip.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;맥에서 터미널을 열고 다운로드 받은 pem 파일이 Downloads 폴더에 있고 pem 이름을 aws_sample.pem으로 가정하고 진행&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ chmod 400 ~/Downloads aws_sample.pem
$ mv ~/Downloads aws_sample.pem ~/.ssh/
$ ssh –i ~/.ssh aws_sample.pem ubuntu@[퍼블릭 DNS] 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;퍼블릭 DNS는 인스턴스 정보에서 퍼블릭 DNS를 복사하면 됨&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/aws_ec2/aws_publicdns.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;접속 후 서버 인스턴스의 ssh 터미널에서 다음 순서로 명령어를 입력&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Django&lt;/code&gt; 실행을 위한 기본적인 서버 구성요소와 &lt;code class=&quot;highlighter-rouge&quot;&gt;python3&lt;/code&gt;을 설치&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo apt-get update
$ sudo apt-get install build-essential
$ sudo apt-get install python3
$ sudo apt-get install python3-pip
$ sudo pip3 install --upgrade pip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;Github에 접속하기 위한 ssh-key를 먼저 생성&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ssh-keygen -t rsa
$ cat /home/ubuntu/.ssh/id_rsa.pub
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;출력된 문자열을 복사 후에 깃 레포지토리 설정 화면에서 deploy key 메뉴에 복사한 내용을 key에 입력&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/aws_ec2/aws_gitkey.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Title&lt;/code&gt;은 임의 값으로 하면 되고, &lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt;값은 위에서 복사한 &lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt;문자열 값&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Github&lt;/code&gt;에서 소스코드를 내려받기&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ mkdir [폴더명]
$ cd 생성한 [풀더명]
$ git clone [clone ssh 주소]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git ssh&lt;/code&gt; 주소는 &lt;code class=&quot;highlighter-rouge&quot;&gt;github&lt;/code&gt; 에서  Clone or download 드롭다운 메뉴 안에 Use SSH 링크를 클릭하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;git@&lt;/code&gt; 으로 시작하는 ssh주소가 뜹니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/aws_ec2/aws_gitssh.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;virtualenv&lt;/code&gt;로 필요한 라이브러리 환경을 구성한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd {프로젝트 폴더명}
$ sudo apt-get install virtualenv
$ virtualenv -p python3 venv
$ source venv/bin/activate #virtualenv 환경으로 진입
$ pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이제 장고 웹 앱을 실행시켜봅시다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ python manage.py runserver 0.0.0.0:8000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이제 &lt;code class=&quot;highlighter-rouge&quot;&gt;aws&lt;/code&gt;탄력적 ip로 웹 브라우저에 입력해서 접속 가능&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h5 id=&quot;게시글이-길어져-s3-연동은-다음-게시글에서-진행&quot;&gt;게시글이 길어져 S3 연동은 다음 &lt;a href=&quot;/2019/11/21/aws-s3&quot;&gt;게시글&lt;/a&gt;에서 진행&lt;/h5&gt;
</description>
        <pubDate>Wed, 20 Nov 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2019/11/20/aws-ec2/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/11/20/aws-ec2/</guid>
        
        <category>aws</category>
        
        <category>ec2</category>
        
        <category>s3</category>
        
        
      </item>
    
      <item>
        <title>Connect React to Django</title>
        <description>&lt;h3 id=&quot;react-proxy-setting&quot;&gt;React Proxy Setting&lt;/h3&gt;

&lt;p&gt;django 에서 만든 api 를 react 에서 호출하기 위해서는 react 에서 proxy 설정을 해주어야 한다. django 는 :8000 번에 위치하고 react 는 :3000 번에 위치하기 때문이다.
예로&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;localhost:3000/users/chagepassword
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;라는 url 이 있으면 react 는 :3000번 이기 때문에 해당 url 을 찾지 못한다. 하지만 이때 proxy 를 :8000 으로 설정을 해두면 우선적으로 localhost:3000/users/chagepassword 을 찾고 존재하지 않으면 localhost:8000/users/chagepassword 에서 찾는다.&lt;/p&gt;

&lt;p&gt;package.json&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;...,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;proxy&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://localhost:8000&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위와 같이 설정&lt;/p&gt;

&lt;h3 id=&quot;connecting-django-to-react&quot;&gt;Connecting django to React&lt;/h3&gt;

&lt;h4 id=&quot;1-proxy-the-request-from-3000-to-8000&quot;&gt;1. proxy the request from 3000 to 8000&lt;/h4&gt;

&lt;p&gt;  - proxy 를 :3000 에서 :8000으로 보냄 (react)&lt;/p&gt;

&lt;h4 id=&quot;2-install-django-cors-headers&quot;&gt;2. install django-cors-headers&lt;/h4&gt;

&lt;p&gt;  - 보안상의 문제 없이 Ajax등의 통신을 하기 위해 사용되는 메커니즘이 CORS임&lt;/p&gt;

&lt;p&gt;  - Django 는 기본적으로 외부에서의 요청을 막음&lt;/p&gt;

&lt;p&gt;  - CORS 표준은 웹 브라우저가 사용하는 정보를 읽을 수 있도록 허가된 출처 집합를 서버에게 알려주도록 허용하는 HTTP 헤더를 추가함으로써 동작&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip install django-cors-headers
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;  &lt;a href=&quot;http://recordingbetter.com/2017/08/07/Django-CORS&quot;&gt;참조&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;3-add-corsheaders-to-install_apps&quot;&gt;3. Add ‘corsheaders’ to INSTALL_APPS&lt;/h4&gt;

&lt;p&gt;  &lt;a href=&quot;https://pypi.org/project/django-cors-headers/&quot;&gt;참조&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;INSTALLED_APPS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;INSTALLED_APPS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;4-add-corsheadersmiddlewarecoremiddleware-before-commonnmiddleware&quot;&gt;4. Add ‘corsheaders.middleware.CoreMiddleware’ before ‘CommonnMiddleware’&lt;/h4&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;MIDDLEWARE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;corsheaders.middleware.CorsMiddleware&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;django.middleware.common.CommonMiddleware&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;5-add-cors_origin_allow_all--true-on-base-settings&quot;&gt;5. Add CORS_ORIGIN_ALLOW_ALL = True on base settings&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;base.py or settings.py&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CORS_ORIGIN_ALLOW_ALL&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;을&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;6-make-djagno-load-the-bunndles-as-static-files-with-strroot_dirpathfrontedbuildstatic&quot;&gt;6. Make Djagno load the bunndles as static files with ‘str(ROOT_DIR.path(‘fronted’,’build’,’static’))’&lt;/h4&gt;

&lt;p&gt;django 가 번들을 static file (js, css…) 을 로딩하게 해야한다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;base.py or settings.py&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;STATICFILES_DIRS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;APPS_DIR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;static&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/Users/user/Documents/git_repo/cafeteria_front/build/static&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;7-create-a-viewspy-file-on-root-folder&quot;&gt;7. Create a views.py file on [root] folder&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;views.py&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;8-create-reactappview-that-read-the-file&quot;&gt;8. Create ReactAppView that read the file.&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;views.py&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;django.views.generic&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;View&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;django.http&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpResponse&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;django.conf&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ReactAppView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;[path to react root folder]&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;build&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;index.html&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
                index.html not found!! build your react app
                &quot;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;501&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;9-add-the-reactappview-as-a-url&quot;&gt;9. Add the ReactAppView as a URL&lt;/h4&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;urlpatterns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;views&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReactAppView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;as_view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()),&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Tue, 19 Nov 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2019/11/19/connect-react-to-django/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/11/19/connect-react-to-django/</guid>
        
        <category>django</category>
        
        <category>react</category>
        
        
      </item>
    
      <item>
        <title>Node virtual serial port for OSX</title>
        <description>&lt;h2 id=&quot;nodejs-가상포트로-시리얼-통신--mac-&quot;&gt;Node.js 가상포트로 시리얼 통신 ( Mac )&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;1-가상포트-생성&quot;&gt;1. 가상포트 생성&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;각 터미널은 새로운 세션(terminal 0~2 으로 칭함)으로 열어 명령어 실행&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;  - socat 설치&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install socat
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;  - socat 을 이용한 가상 포트 생성 &lt;strong&gt;terminal 0&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;socat -d -d pty,raw,echo=0 pty,raw,echo=0
                -받는쪽-        -보낼쪽-
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;받는쪽과 보낼쪽을 구분 했지만 양방향으로 주고 받을 수 있다.&lt;/p&gt;

&lt;p&gt;아래와 같은 포트가 생성&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/virtual_socat/socat.png&quot; alt=&quot;socat&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;2-가상포트-테스트&quot;&gt;2. 가상포트 테스트&lt;/h4&gt;

&lt;p&gt; - 값 출력(받을) 준비 &lt;strong&gt;terminal 1&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat /dev/ttys001
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt; - 값 입력 &lt;strong&gt;termibal 2&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo &quot;TEST Message&quot; &amp;gt; /dev/ttys002
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&amp;gt; 꺽쇠 명령어는 좌측 명령어를 우측에 입력 또는 생성&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt; - 결과&lt;/p&gt;

&lt;p&gt;아래와 같이 나오면 가상포트 생성 성공&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/virtual_socat/socat_result.png&quot; alt=&quot;result&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-시리얼-통신-연결&quot;&gt;3. 시리얼 통신 연결&lt;/h2&gt;

&lt;p&gt;serialport 패키지를 이용&lt;/p&gt;

&lt;p&gt; - serialport 설치&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install serialport
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt; - 직렬 포트 열기&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;const SerialPort = require('serialport')
    const port = new SerialPort('/dev/ttys002', {
    baudRate: 9600
})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt; - 값 입력 및 받기&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;port.on(&quot;open&quot;, () =&amp;gt; {
    console.log(&quot;Serial Port open&quot;);

    port.on(&quot;data&quot;, data =&amp;gt; {
        console.log(&quot;value: &quot;, String.fromCharCode(...data));
    }); // 포트모드 &quot;flowing mode&quot;

    /*
    port.on('readable', function () {
        console.log('Data:', port.read())
    }) // 포트모드 &quot;paused mode&quot;
    */

    port.write(&quot;Hello world&quot;, error =&amp;gt; {
        error
        ? console.log(&quot;Error on write : &quot;, error.message)
        : console.log(&quot;입력 완료&quot;);
    }); // callback 으로 error 를 받음
});
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;자세한 사용법은 &lt;a href=&quot;http://www.google.co.kr&quot;&gt;이곳&lt;/a&gt; 참조&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;4-최종-결과&quot;&gt;4. 최종 결과&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/virtual_socat/socat_code.png&quot; alt=&quot;code&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;참고-문서&quot;&gt;참고 문서&lt;/h4&gt;

&lt;p&gt; - &lt;a href=&quot;https://stackoverflow.com/questions/52187/virtual-serial-port-for-linux&quot;&gt;socat&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; - &lt;a href=&quot;https://serialport.io/docs/guide-usage&quot;&gt;serialport&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 21 May 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2019/05/21/node-virtual-serial-port-copy/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/05/21/node-virtual-serial-port-copy/</guid>
        
        <category>rs232</category>
        
        <category>node</category>
        
        <category>serial port</category>
        
        
      </item>
    
      <item>
        <title>Modbus rtu rs485 / CRC Check</title>
        <description>&lt;h2 id=&quot;외경-측정기&quot;&gt;외경 측정기&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;modbus-rtu-rs485-crc16-for-node&quot;&gt;MODBUS RTU RS485 (CRC16 for node)&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;modbus-rtu-frame-format&quot;&gt;Modbus RTU frame format&lt;/h3&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;start&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;slave addr&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;comand code&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;data content&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;CRC Check&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;end&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;10ms 텀으로 구분&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;8bit&lt;/strong&gt; 범위 0~247&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;8bit&lt;/strong&gt; 03H, 10H&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;n*8bit&lt;/strong&gt; 하단에서 설명&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;16bit&lt;/strong&gt; &lt;a href=&quot;naver.com&quot;&gt;참조&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;10ms 텀을 주고 구분&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;위와 같은 데이터 포맷을 가진다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;request&quot;&gt;Request&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;요청 필드 명&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;예제 값(16진수)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;Slave addr&lt;/b&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;01&lt;/b&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;Command code&lt;/b&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;03&lt;/b&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;start addr high byte&lt;/b&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;00&lt;/b&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;start addr low byte&lt;/b&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;06&lt;/b&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;Variable number byte &lt;/b&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;00&lt;/b&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;Variable low number byte &lt;/b&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;08&lt;/b&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;CRC16&lt;/b&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;-&lt;/b&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;CRC16&lt;/b&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;-&lt;/b&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://drive.google.com/drive/folders/1sd7yxczFnP95oezSRXYtMkZyUGJCGVsv?usp=sharing&quot;&gt;참고 문서&lt;/a&gt; 를 확인해보면 Command code 0x03 은 측정기에서 값을 받아 올 수 있는 코드이고,&lt;/p&gt;

&lt;p&gt;주소 0x06~0x07, 0x08~0x09은 각각 X, Y의 외경 값을 가진다.&lt;/p&gt;

&lt;p&gt;start addr high, low byte 는 16진수 주소를 둘(반?)으로 나눈 값이고,&lt;/p&gt;

&lt;p&gt;Variable high, low number byte 는 총 몇 바이트를 읽을건지 명시한다.&lt;/p&gt;

&lt;p&gt;즉 위 패킷은 0x06 ~ 0x09 까지 총 8byte 를 읽는다.&lt;/p&gt;

&lt;p&gt;요약하면 위와 같은 요청은 X, Y 의 외경값 응답을 기대 할 수 있다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;respone&quot;&gt;Respone&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;응답 받을 데이터의 범위를 20~40 이라고 가정
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;응답 필드 명&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;예제 값(16진수)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;Slave addr&lt;/b&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;01&lt;/b&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;Command code&lt;/b&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;03&lt;/b&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;addr 0x06 high byte&lt;/b&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;18&lt;/b&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;addr 0x06 low byte&lt;/b&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;14&lt;/b&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;addr 0x07 high byte&lt;/b&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;1E&lt;/b&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;addr 0x07 low byte&lt;/b&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;19&lt;/b&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;addr 0x08 high byte&lt;/b&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;23&lt;/b&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;addr 0x08 low byte&lt;/b&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;1F&lt;/b&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;addr 0x09 high byte&lt;/b&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;28&lt;/b&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;addr 0x09 low byte&lt;/b&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;24&lt;/b&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;CRC16&lt;/b&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;-&lt;/b&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;CRC16&lt;/b&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;b&gt;-&lt;/b&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;crc&quot;&gt;CRC&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;Cyclic Redundancy Check 의 준말이며, 데이터를 전송할 때 전송된 데이터에 오류가 있는지를 확인하기 위한 체크값을 결정하는 방법 중 하나이다.&lt;/p&gt;

&lt;p&gt;n 비트의 주어진 정보가 있을때, 이를 k 비트 만큼 자리를 올리고 미리 약속한 k 비트의 키 값으로 나누면 r 비트의 나머지가 남게 된다. 송신측에서는 원래의 정보 비트를 k 비트 자리 올린 것에 r 비트의 나머지를 더해서 n+r 비트의 데이터를 만들어 보낸다.&lt;/p&gt;

&lt;p&gt;수신측에서는 수신된 n+r 비트의 데이터를 키 값으로 나누어 보고 나머지가 정확히 0 이 되는지를 검사하면 된다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;crc16&quot;&gt;CRC16&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;위에서 k 가 16 비트이면 CRC-16, 32비트이면 CRC-32 가 된다. 키(제수)) 값으로는 아래를 참고하자.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;crc16-의-종류&quot;&gt;CRC16 의 종류&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Cyclic_redundancy_check#Polynomial_representations_of_cyclic_redundancy_checks&quot;&gt;CRC16 참고자료&lt;/a&gt; 를 보면 다양한 crc 종류가 있다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;crc16-ibm-을-알아보자&quot;&gt;&lt;strong&gt;CRC16-IBM&lt;/strong&gt; 을 알아보자&lt;/h3&gt;

&lt;p&gt;Modbus, USB, ANSI 등.. 에 이용된다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;아마 IBM 의 룰을 따르지 않을까 생각
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;CRC-16-IBM(modbus) 에서는 X&lt;sup&gt;16&lt;/sup&gt; + x&lt;sup&gt;15&lt;/sup&gt; + x&lt;sup&gt;2&lt;/sup&gt; + 1 즉 0x8005 를 키(제수)로 이용한다. master 와 server 는 꼭 같은 키를 이용해야한다.&lt;/p&gt;

&lt;p&gt;계산 방법은 &lt;a href=&quot;https://m.blog.naver.com/PostView.nhn?blogId=h111922&amp;amp;logNo=220640536147&amp;amp;proxyReferer=https%3A%2F%2Fwww.google.com%2F&quot;&gt;이곳&lt;/a&gt; 을 참조&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;최종-결과-serial--crc&quot;&gt;&lt;strong&gt;최종 결과 (serial + crc)&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/modbus/crc_check.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 21 May 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2019/05/21/modbus-rtu-rs485/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/05/21/modbus-rtu-rs485/</guid>
        
        <category>crc</category>
        
        <category>rs232</category>
        
        <category>rs485</category>
        
        <category>modbus</category>
        
        
      </item>
    
      <item>
        <title>Redux</title>
        <description>&lt;h4 id=&quot;redux-용어&quot;&gt;Redux 용어&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;redux 는 javscript object 형태로 데이터를 저장하고있다. 이를 store 라고 부른다.
Redux(object) 의 데이터를 수정하기 위해서는 action 을 reducer 로 보내야한다. reducer 가 나를 대신에 object 를 변경한다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;액션-action&quot;&gt;액션 (Action)&lt;/h3&gt;

&lt;p&gt;상태에 어떠한 변화가 필요하게 될 땐, 우리는 액션이란 것을 발생시킨다. 이는, 하나의 객체이고 액션 객체는 다음과 같은 형식으로 있다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;AddTodo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;삼겹살 먹기&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;액션 객체는 &lt;code class=&quot;highlighter-rouge&quot;&gt;type&lt;/code&gt; 필드는 필수이고, 그 외의 값은 임의로 넣으면 된다.&lt;/p&gt;

&lt;h3 id=&quot;액션-생성함수-action-creator&quot;&gt;액션 생성함수 (Action Creator)&lt;/h3&gt;

&lt;p&gt;액션 생성함수는, 액션을 만드는 함수입니다. 단순히 파라미터를 받아와서 액션 객체 형태로 만들어준다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;addTodo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ADD_TODO&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;changeInput&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;CHANGE_INPUT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;리듀서-reducer&quot;&gt;리듀서 (Reducer)&lt;/h3&gt;

&lt;p&gt;리듀서는 변화를 일으키는 함수입니다. 리듀서는 두가지의 파라미터를 받아옵니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;initialState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;phone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;010&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;부산&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reducer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initalState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ADD_SECONDE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;서울&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;dispatch&quot;&gt;dispatch&lt;/h3&gt;

&lt;p&gt;디스패치는 스토어의 내장함수 중 하나이다. 디스패치는 액션을 발생 시키는 것 이라고 이해하면 된다 &lt;code class=&quot;highlighter-rouge&quot;&gt;dispatch&lt;/code&gt; 라는 함수에는 액션을 파라미터로 전달한다. 자매품으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;bindActionCrator&lt;/code&gt; 도 있다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;사용법은 아래 connect &amp;amp; dispatch &amp;amp; bindActionCreators 참조&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;store&quot;&gt;Store&lt;/h3&gt;

&lt;p&gt;리덕스에서는 한 애플리케이션 당 하나의 스토어를 만들게 된다. 스토어 안에는 현재의 앱 상태와 리듀서가 들어가 있고, 추가적으로 몇가지 내장 함수들이 있다.&lt;/p&gt;

&lt;h2 id=&quot;redux-ducks-pattern&quot;&gt;redux ducks pattern&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;항상 &lt;code class=&quot;highlighter-rouge&quot;&gt;reducer()&lt;/code&gt;란 이름의 함수를 export default 해야한다.&lt;/li&gt;
  &lt;li&gt;항상 모듈의 &lt;code class=&quot;highlighter-rouge&quot;&gt;action&lt;/code&gt; 생성자들을 함수형태로 export 해야한다.&lt;/li&gt;
  &lt;li&gt;항상 npm-module-or-app/reducer/ACTION_TYPE 형태의 &lt;code class=&quot;highlighter-rouge&quot;&gt;action&lt;/code&gt; 타입을 가져야한다.&lt;/li&gt;
  &lt;li&gt;어쩌면 &lt;code class=&quot;highlighter-rouge&quot;&gt;action&lt;/code&gt; 타입들을 UPPER_SNAKE_CASE로 export 할 수 있다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;provider--createstore&quot;&gt;Provider &amp;amp; createStore&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;react-redux&lt;/code&gt;에 포함된 컴포넌트&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Provider&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;react-redux&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createStore&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;redux&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reducer&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;../../reducer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reducer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Provider&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Timer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Timer&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Provider&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;작성한 &lt;code class=&quot;highlighter-rouge&quot;&gt;reducer&lt;/code&gt; 를 &lt;code class=&quot;highlighter-rouge&quot;&gt;createStore&lt;/code&gt; 이용해 생성하며, &lt;code class=&quot;highlighter-rouge&quot;&gt;Provier&lt;/code&gt; 는 Store 를 복사해 자식 컴포넌트에게 넘겨준다.&lt;/p&gt;

&lt;h3 id=&quot;connect--dispatch--bindactioncreators&quot;&gt;connect &amp;amp; dispatch &amp;amp; bindActionCreators&lt;/h3&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;connect&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;react-redux&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bindActionCreators&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;redux&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mapStateToProps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isPlaying&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;elapsedTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timeDuration&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;isPlaying&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;elapsedTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;timeDuration&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mapDispatchToProps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dispatch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;startTimer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bindActionCreators&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;startTimer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;restartTimer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bindActionCreators&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;restartTimer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// const mapDispatchToProps = dispatch =&amp;gt; {&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//   return {&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//     startTimer: () =&amp;gt; dispatch(startTimer()),&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//     restartTimer: () =&amp;gt; dispatch(restartTimer())&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//   };&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// };&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mapStateToProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mapDispatchToProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PresenterTimer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Proiver 로 부터 전달 받은 store 를 적용 시키는 방법이다.&lt;/p&gt;

&lt;p&gt;다이렉트로 사용해도 되지만 presenter 와 logic 을 분리하고 싶을 때 &lt;code class=&quot;highlighter-rouge&quot;&gt;connect&lt;/code&gt; 를 이용해 props 전달를 전달 가능하다.
&lt;code class=&quot;highlighter-rouge&quot;&gt;bindActionCreators&lt;/code&gt; 또는 &lt;code class=&quot;highlighter-rouge&quot;&gt;dispatch&lt;/code&gt; 상황에 맞게 선택하여 사용하면 된다.&lt;/p&gt;

&lt;h3 id=&quot;combinereducers&quot;&gt;combineReducers&lt;/h3&gt;

&lt;p&gt;리듀서들로 이루어진 객체를 취하는 최상위 리듀서이다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reducer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;combineReducers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;reducer1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;reducer2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;reducer3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;...,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;redux-logger&quot;&gt;redux-logger&lt;/h3&gt;

&lt;p&gt;현재 상태와 다음 상태를 확인 할 수 있는 middleware 로거이다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;yarn add redux-logger&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;redux-thunk&quot;&gt;redux-thunk&lt;/h3&gt;

&lt;p&gt;리덕스를 사용하는 프로젝트에서 비동기 작업을 처리 할 때 대표적인 방법으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;redux-thunk&lt;/code&gt; 가 있다. 이를 사용하면 비동기 작업을 간단하게 할 수 있다.
간단히 설명하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;redux-thunk&lt;/code&gt; 미들웨어는 객체 대신 함수를 생성하는 액션 생성함수를 작성 할 수 있게 해준다.&lt;/p&gt;
</description>
        <pubDate>Fri, 15 Mar 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2019/03/15/redux/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/03/15/redux/</guid>
        
        <category>react</category>
        
        <category>redux</category>
        
        
      </item>
    
      <item>
        <title>React-redux</title>
        <description>&lt;h2 id=&quot;react-redux&quot;&gt;React Redux&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;React Redux&lt;/code&gt; 는 Redux를 컴포넌트 상에서 간편하게 사용할 수 있는 라이브러리이다. React Redux는 컴포넌트에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;store&lt;/code&gt;를 &lt;code class=&quot;highlighter-rouge&quot;&gt;props&lt;/code&gt;로 받아오거나 &lt;code class=&quot;highlighter-rouge&quot;&gt;Subscribe&lt;/code&gt;를 직접 할 필요가 없어 생산성이 증가된다. React의 컴포넌트 자체는 Redux의 흐름에 동화되기 어려워 React Redux 라이브러리에서 제공하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;connect&lt;/code&gt; 함수를 사용한다. &lt;code class=&quot;highlighter-rouge&quot;&gt;connect&lt;/code&gt; 함수의 인자인 &lt;code class=&quot;highlighter-rouge&quot;&gt;mapStateToProps&lt;/code&gt; 와 &lt;code class=&quot;highlighter-rouge&quot;&gt;mapDispatchToProps는&lt;/code&gt; 다음과 같다.&lt;/p&gt;

&lt;h3 id=&quot;mapstatetoprops&quot;&gt;mapStateToProps&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mapStateToProps&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;connect&lt;/code&gt; 함수에 첫 번째 인자로 들어가는 함수 혹은 객체이다. &lt;code class=&quot;highlighter-rouge&quot;&gt;mapStateToProps&lt;/code&gt;는 기본적으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;store&lt;/code&gt;가 업데이트될 때마다 자동으로 호출 된다. 이를 원하지 않는다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;null&lt;/code&gt; 혹은 &lt;code class=&quot;highlighter-rouge&quot;&gt;undefined&lt;/code&gt; 값을 제공해야 한다.&lt;/p&gt;

&lt;h3 id=&quot;mapdispatchtoprops&quot;&gt;mapDispatchToProps&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mapDispatchToProps&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;connect&lt;/code&gt; 함수의 두 번째 인자로 사용된다. 이는 기본적으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;store&lt;/code&gt;에 접근한 컴포넌트가 &lt;code class=&quot;highlighter-rouge&quot;&gt;store&lt;/code&gt;의 상태를 바꾸기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;dispatch&lt;/code&gt;를 사용할 수 있게 만든다.&lt;/p&gt;

&lt;p&gt;여러 컴포넌트가 리스트 형식으로 모여 있을 경우 각 요소의 컴포넌트를 각각 연결하기에는 비효율적인 면이 있다. 따라서 자식 컴포넌트를 감싸고 있는 하나의 부모 컴포넌트가 대표하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;connect&lt;/code&gt;하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;connect&lt;/code&gt;된 해당 컴포넌트를 &lt;code class=&quot;highlighter-rouge&quot;&gt;Container&lt;/code&gt;라고 한다. &lt;code class=&quot;highlighter-rouge&quot;&gt;Container&lt;/code&gt;는 가독성을 높이며 다른 컴포넌트와는 디렉토리를 분리하는 것이 효율적이다. React Redux 라이브러리를 코드는 다음과 같다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/react-redux/react_redux_code.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위 사진은 &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; 닉네임의 사용여부를 체크하기 위한 코드이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/react-redux/redux-ducksptrn.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위 사진은 &lt;code class=&quot;highlighter-rouge&quot;&gt;reudx ducks pattern&lt;/code&gt; 으로 작성된 &lt;code class=&quot;highlighter-rouge&quot;&gt;reducer&lt;/code&gt; 이다. &lt;code class=&quot;highlighter-rouge&quot;&gt;reudx ducks pattern&lt;/code&gt; 에 대해서 알고 싶으면
다음 &lt;a href=&quot;/2019-03-15-redux.markdown&quot;&gt;게시글&lt;/a&gt;을 참고 바란다.&lt;/p&gt;
</description>
        <pubDate>Fri, 15 Mar 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2019/03/15/react-redux/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/03/15/react-redux/</guid>
        
        <category>react</category>
        
        <category>redux</category>
        
        
      </item>
    
      <item>
        <title>React Devtools</title>
        <description>&lt;h2 id=&quot;설치-방법&quot;&gt;설치 방법&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;크롬에서-설치&quot;&gt;크롬에서 설치&lt;/h4&gt;

&lt;p&gt;  1. 설치 &lt;a href=&quot;https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd&quot;&gt;Chrome Web Store&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  2. 사용법은 공식 문서가 매우 친절하다. &lt;a href=&quot;https://github.com/zalmoxisus/redux-devtools-extension/blob/master/README.md&quot;&gt;참고&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 14 Mar 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2019/03/14/redux-devtool/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/03/14/redux-devtool/</guid>
        
        <category>redux</category>
        
        
      </item>
    
      <item>
        <title>동아리 알고리즘 강좌 사이트</title>
        <description>&lt;p&gt;학과 내에서 운영하는 창업동아리에서 필요로 하여 만들게 되었으며, 필자는 컴퓨터공학과이기 때문에 팀원들 모두 동일한 전공이고 알고리즘을 공부하자는 취지로 다운 받은 알고리즘 강의를 다 같이 보기 위해 프로젝트를 진행하였다. 해당 사이트의 아래 기능에 중점을 두고 개발하였다.&lt;/p&gt;

&lt;p&gt;  1.소셜 로그인 (kakako, github).&lt;/p&gt;

&lt;p&gt;  2.동영상 검색&lt;/p&gt;

&lt;p&gt;  3.동영상 업로드&lt;/p&gt;

&lt;p&gt;  4.동영상 시청&lt;/p&gt;

&lt;p&gt;  5.동영상 댓글&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;로그인--회원가입&quot;&gt;로그인 &amp;amp; 회원가입&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/video_repo/joinPage.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/assets/images/video_repo/loginPage.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;깃허브와 카카오톡 계정을 이용해서 가입 가능하다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;회원-승인-페이지&quot;&gt;회원 승인 페이지&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/video_repo/userControllPage.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;관리자(만든이)만 접속 가능하며 외부인의 열람을 막기 위해
승인 절차가 있어야 업로드 및 동영상 열람이 가능하다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;동영상-열람&quot;&gt;동영상 열람&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/video_repo/mainpage_login.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;관리자의 승인을 받은 사용자만
알고리즘 기본 강의를 볼 수 있다.&lt;/p&gt;

&lt;p&gt;가입 또는 시청하기 &lt;a href=&quot;https://null-lecture.herokuapp.com/&quot;&gt;링크&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;개발환경&quot;&gt;개발환경&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;javascript ES6 이상 문법 사용&lt;/li&gt;
  &lt;li&gt;에디터 vscode 사용&lt;/li&gt;
  &lt;li&gt;heroku 를 이용한 호스팅&lt;/li&gt;
  &lt;li&gt;atlas 클라우드에 디비 업로드&lt;/li&gt;
  &lt;li&gt;s3 를 이용한 동영상 관리&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;부가-설명&quot;&gt;부가 설명&lt;/h4&gt;

&lt;p&gt;mongolab 사용이 중지되어 atlas 로 이동&lt;/p&gt;
</description>
        <pubDate>Sun, 30 Dec 2018 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2018/12/30/video-repository/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/12/30/video-repository/</guid>
        
        <category>node</category>
        
        
      </item>
    
      <item>
        <title>최신 babel 적용</title>
        <description>&lt;p&gt;바벨 공식 문서를 보면 &lt;code class=&quot;highlighter-rouge&quot;&gt;Babel is a JavaScript compiler. Use next generation JavaScript, today.&lt;/code&gt; 라고 적혀있다.
바벨은 다음 버전의 자바스크립트 문법을 현재 사용가능한 문법으로 변환 시켜주는 역할을 한다. ES6 부터 자바스크립트 문법에 많은 변화가 있었는데 브라우저는 해당 문법을 이해하지 못하기 때문에 babel 을 거쳐 브라우저가 사용가능한 문법으로 변환 시켜주어야 한다.&lt;/p&gt;

&lt;h4 id=&quot;babel-적용&quot;&gt;babel 적용&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;STEP 1&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install @babel/node
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;STEP 2&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install @babel/preset-env
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;최신바벨 중에서 가장 검증된..? 최신바벨&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;STEP 3&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;.babelrc 파일 생성 후 아래와 같이 작성&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;presets&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@babel/preset-env&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 설치한 패키지 명시&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;STEP 4&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;babel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;js&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// node index.js 를 대체&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;라고 치기 귀찮으니까 script 를 작성해주자.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;start&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;babel-node index.js&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;실행!&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;에러가 발생한다..&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Error: Cannot find module '@babel/core'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;없다고 하니까 설치해보자&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install @babel/core
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이상 es6 문법이 문제 없이 동작한다.&lt;/p&gt;
</description>
        <pubDate>Sat, 29 Dec 2018 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2018/12/29/babel-apply/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/12/29/babel-apply/</guid>
        
        <category>node</category>
        
        
      </item>
    
      <item>
        <title>Passport kakao, github 회원가입</title>
        <description>&lt;h2 id=&quot;passport&quot;&gt;Passport&lt;/h2&gt;

&lt;p&gt;passport 란?
passport 는 인증 절차 로직을 편하게 작업할 수 있게 도와주는 nodejs 의 미들웨어 이다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.passportjs.org/docs/downloads/html/&quot;&gt;공식문서&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;strategy&quot;&gt;Strategy&lt;/h3&gt;

&lt;p&gt;우선 passport 의 strategy 를 알아보자.Strategy 란 passpor 에서 쓰이는 인증 방식이다.대표적으로 passport-local 이 있고, 흔히 사용하는 id/pwd 를 이용해 쿠키-세션으로 인증하는 strategy 이다.&lt;/p&gt;

&lt;p&gt;필자는 &lt;code class=&quot;highlighter-rouge&quot;&gt;passport-local-mongoose&lt;/code&gt; 을 사용 하였으므로, &lt;code class=&quot;highlighter-rouge&quot;&gt;passport-local&lt;/code&gt; 을 이용하려면 지금부터는 &lt;a href=&quot;http://www.passportjs.org/packages/passport-local/&quot;&gt;공식문서&lt;/a&gt;를 참고하길 바란다.&lt;/p&gt;

&lt;h3 id=&quot;passport-local-mongoose&quot;&gt;passport-local-mongoose&lt;/h3&gt;

&lt;p&gt;passport 를 이용한 kakao, github social login&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;passport-local-mongoose 설치 =&amp;gt; 유저모델 생성 =&amp;gt; passport 선언 =&amp;gt; passport-local 기본설정 =&amp;gt; 사용
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;step-1-설치&quot;&gt;STEP 1. 설치&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install passport passport-local passport-local-mongoose
or
yarn add passport passport-local passport-local-mongoose
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;step-2-user-모델-생성&quot;&gt;STEP 2. User 모델 생성&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;User.js&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mongoose&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;mongoose&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;passportLocalMongose&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;passport-local-mongoose&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UserSchema&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mongoose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Schema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;avatarUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;authApply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Boolean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;githubId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;kakaoId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//소셜 로그인 기능을 만들 예정이라면 미리 해당 속성을 생성 해두자&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;comments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mongoose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Schema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Types&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ObjectId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Comment&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;videos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mongoose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Schema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Types&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ObjectId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Video&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;UserSchema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;plugin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;passportLocalMongose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;usernameField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;email&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mongoose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;User&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UserSchema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;step-3-passport-선언&quot;&gt;STEP 3. passport 선언&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;app.js&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;passport&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;passport&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;...;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;passport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// initialize 해두면 user 의 정보가 req.user 에 실린다&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;passport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// session 으로 로그인 지속을 시킨다면 필수 적으로 입력해준다.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// session 을 이용하기 위해선 express-session 의 설치도 필수도 필수이다.&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install express-session
or
yarn add express-session
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;step-4-passport-설정&quot;&gt;STEP 4. passport 설정&lt;/h4&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;passport&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;passport&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;./models/User&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;GithubStrategy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;passport-github&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;KakaoStrategy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;passport-kakao&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;githubLoginCallback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;kakaoLoginCallback&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;./controllers/userController&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;routes&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;./routes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dotenv&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;dotenv&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;dotenv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;passport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createStrategy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;passport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;GithubStrategy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;clientID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;GH_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;clientSecret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;GH_SECRET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;callbackURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PRODUCTION&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`https://null-lecture.herokuapp.com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;githubCallback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`http://localhost:40d00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;githubCallback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;githubLoginCallback&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// github 소셜 로그인&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;passport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;KakaoStrategy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;clientID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;KAKAO_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;callbackURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PRODUCTION&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`https://null-lecture.herokuapp.com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;kakaoCallback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`http://localhost:4000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;kakaoCallback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;kakaoLoginCallback&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// kakao 소셜 로그인&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;passport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serializeUser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serializeUser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//필수&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;passport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;deserializeUser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;deserializeUser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//필수&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;http://www.passportjs.org/packages/&quot;&gt;문서&lt;/a&gt; 를 참고해보면 소셜 로그인을 얼마나 간단하게 만들 수 있는지 알 수 있다. 그리고 &lt;code class=&quot;highlighter-rouge&quot;&gt;clientID&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;callbackURL&lt;/code&gt; 는 공개 되면 안되니까 꼭 &lt;code class=&quot;highlighter-rouge&quot;&gt;.env&lt;/code&gt; 파일에 저장해두자 필자는 참고로 카카오는 소셜 로그인에 &lt;code class=&quot;highlighter-rouge&quot;&gt;clientSecret&lt;/code&gt; 를 사용하지 않으니 empty string(“”) 을 넘기거나 넘기지 않아도 된다. &lt;code class=&quot;highlighter-rouge&quot;&gt;clientSecret&lt;/code&gt; 를 한참 찾아 해맸다.&lt;/p&gt;

&lt;p&gt;본론으로 돌아가서 &lt;code class=&quot;highlighter-rouge&quot;&gt;passport-local-mongoose&lt;/code&gt; 을 사용하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;passport-local&lt;/code&gt; 코드가 대폭 줄어들게 된다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;passport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createStrategy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;passport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serializeUser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serializeUser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;passport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;deserializeUser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;deserializeUser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위 3줄이면 모든 설정이 끝난다. 이때 &lt;code class=&quot;highlighter-rouge&quot;&gt;stategy&lt;/code&gt; 는 로그인하는 방식을 말한다. &lt;code class=&quot;highlighter-rouge&quot;&gt;serializeUser&lt;/code&gt; 는 어떤 정보를 쿠키에 줄지, 사용자에 대해서 어떤 정보를 가질 수 있는지 설정하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;deserializeUser&lt;/code&gt; 는 이름 그대로 serializer 를 deserializeUser 해준다. 마지막으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;app.js&lt;/code&gt; 에 &lt;code class=&quot;highlighter-rouge&quot;&gt;import &quot;./passport&quot;&lt;/code&gt; 를 추가한다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;step-5-passport-사용&quot;&gt;STEP 5. passport 사용&lt;/h4&gt;

&lt;p&gt;  &lt;code class=&quot;highlighter-rouge&quot;&gt;회원가입.js&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;postJoin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;password2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;password2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rendser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;join&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pageTitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Join&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;avatarUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;../img/defaultProfile.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;authApply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
      &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;register&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;//register: 새 사용자 인스턴스를 주어진 암호로 등록하는 편리한 방법이다.(passport local mongoose 에서 제공)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;redirect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;home&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;  &lt;code class=&quot;highlighter-rouge&quot;&gt;회원가입_수.js&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;postLogin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;passport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;authenticate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;local&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;successRedirect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;home&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 회원가입 성공&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;failureRedirect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;login&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 회원가입 실패&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;  &lt;code class=&quot;highlighter-rouge&quot;&gt;kakao_회원가입.js&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;kakaoLogin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;passport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;authenticate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;kakao&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;kakaoLoginCallback&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;_json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;kaccount_email&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;profile_image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nickname&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newUser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nickname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;kaccount_email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;avatarUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;profile_image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;kakaoId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;authApply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newUser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;kakaoLoginCallback&lt;/code&gt; 은 위 &lt;code class=&quot;highlighter-rouge&quot;&gt;passport.js&lt;/code&gt; 에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;KakaoStrategy&lt;/code&gt; 의 콜백으로 호출 되며 &lt;code class=&quot;highlighter-rouge&quot;&gt;(accessToken, refreshToken, profile, done)&lt;/code&gt; 의 parameter 를 갖는다.&lt;/p&gt;

&lt;p&gt;Router 를 통해 해당 코드를 접근하면 회원가입이 완료된다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;비밀번호 체크, 또는 중복가입 코드는 제외하고 올렸으므로 세부적인 기능은 직접 작성해서 사용&lt;/p&gt;
</description>
        <pubDate>Fri, 28 Dec 2018 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2018/12/28/passport/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/12/28/passport/</guid>
        
        <category>node</category>
        
        
      </item>
    
      <item>
        <title>cookie-parser 사용법</title>
        <description>&lt;h3 id=&quot;cookie-parser&quot;&gt;cookie-parser&lt;/h3&gt;

&lt;p&gt;요청된 쿠키를 쉽게 추출할 수 있도록 해주는 미들웨어.
request 객체에 cookies 속성이 부여된다.&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;express&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'express'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cookieParser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cookie-parser'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;express&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cookieParser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
 
&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Cookies: '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cookies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
 
&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8080&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Fri, 28 Dec 2018 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2018/12/28/cookie-parser/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/12/28/cookie-parser/</guid>
        
        <category>node</category>
        
        
      </item>
    
      <item>
        <title>body-parser 사용법</title>
        <description>&lt;h3 id=&quot;body-parser&quot;&gt;body-parser&lt;/h3&gt;
&lt;p&gt;body-parser 란?
&lt;code class=&quot;highlighter-rouge&quot;&gt;body-parser&lt;/code&gt; 는 nodejs 의 post 요청 데이터를 추출할 수 있도록 만들어 주는 미들웨어이다. &lt;code class=&quot;highlighter-rouge&quot;&gt;body-parser&lt;/code&gt; 를 &lt;code class=&quot;highlighter-rouge&quot;&gt;req&lt;/code&gt; 에 &lt;code class=&quot;highlighter-rouge&quot;&gt;body property&lt;/code&gt; 를 사용할 수 있다.&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;express&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;express&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bodyParser&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;body-parser&quot;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;express&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bodyParser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bodyParser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;urlencoded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;extended&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;위와 같이 작성하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;json&lt;/code&gt; 으로 받아볼 수 있다.&lt;/p&gt;

</description>
        <pubDate>Fri, 28 Dec 2018 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2018/12/28/body-parser/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/12/28/body-parser/</guid>
        
        <category>node</category>
        
        
      </item>
    
      <item>
        <title>CPU Scheduling</title>
        <description>&lt;h2 id=&quot;cpu-scheduling-simulator&quot;&gt;CPU Scheduling Simulator&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;프로젝스-소개&quot;&gt;프로젝스 소개&lt;/h4&gt;

&lt;p&gt;사용자가 편리한 시뮬레이터를 구현하였다.
프로세스 수를 정해주면 기타 옵션들은 자동 또는 수동으로 설정가능하며
수동은 우선순위, 서비스시간, 도착시간을 직접 입력해야한다.
기법은 FCFS, HRN, SJF, Priority, SRT, RonudRobin 이있고 프로세스 수를 입력하고
기법을 선택한 후 실행 버튼을 누르면 실행되며
각 프로세스 별 대기시간과 평균 대기시간, 평균 반환시간을 나타내고
최종적으로 기법별 스케줄링을 그래프로 도식화한다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;시작화면&quot;&gt;시작화면&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cpu_scheduling/cpu_main.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;프로세스-생성&quot;&gt;프로세스 생성&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cpu_scheduling/createProcess.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;다양한-cpuscheduling-기법&quot;&gt;다양한 CpuScheduling 기법&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cpu_scheduling/FCFS.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/assets/images/cpu_scheduling/HRN.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/assets/images/cpu_scheduling/SJF.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;개발환경&quot;&gt;개발환경&lt;/h4&gt;

&lt;p&gt;언어: java 9.0.1&lt;/p&gt;

&lt;p&gt;에디터: eclipse 사용&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;부가-설명&quot;&gt;부가 설명&lt;/h4&gt;

&lt;p&gt;각 기법별로 점화식을 이용&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 13 Dec 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2017/12/13/cpu-scheduling/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/12/13/cpu-scheduling/</guid>
        
        <category>simulator</category>
        
        <category>cpu</category>
        
        <category>os</category>
        
        
      </item>
    
      <item>
        <title>django file upload from react</title>
        <description>&lt;h3 id=&quot;작성중입니다&quot;&gt;작성중입니다.&lt;/h3&gt;
</description>
        <pubDate>Mon, 23 Oct 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2017/10/23/react-django-fileupload/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/10/23/react-django-fileupload/</guid>
        
        <category>Kale</category>
        
        
      </item>
    
      <item>
        <title>react webpack</title>
        <description>&lt;h3 id=&quot;작성중입니다&quot;&gt;작성중입니다.&lt;/h3&gt;
</description>
        <pubDate>Mon, 23 Oct 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2017/10/23/react-webpack/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/10/23/react-webpack/</guid>
        
        <category>Kale</category>
        
        
      </item>
    
      <item>
        <title>redux ducks pattern</title>
        <description>&lt;h3 id=&quot;작성중입니다&quot;&gt;작성중입니다.&lt;/h3&gt;
</description>
        <pubDate>Mon, 23 Oct 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2017/10/23/react-router/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/10/23/react-router/</guid>
        
        <category>Kale</category>
        
        
      </item>
    
      <item>
        <title>Sass-mixin</title>
        <description>&lt;h3 id=&quot;작성중입니다&quot;&gt;작성중입니다.&lt;/h3&gt;
</description>
        <pubDate>Mon, 23 Oct 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2017/10/23/sass-mixin/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/10/23/sass-mixin/</guid>
        
        <category>Kale</category>
        
        
      </item>
    
      <item>
        <title>redux ducks pattern</title>
        <description>&lt;h3 id=&quot;작성중입니다&quot;&gt;작성중입니다.&lt;/h3&gt;
</description>
        <pubDate>Mon, 23 Oct 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2017/10/23/redux-ducks-pattern/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/10/23/redux-ducks-pattern/</guid>
        
        <category>Kale</category>
        
        
      </item>
    
      <item>
        <title>SDES Simulator</title>
        <description>&lt;h3 id=&quot;작성중입니다&quot;&gt;작성중입니다.&lt;/h3&gt;
</description>
        <pubDate>Mon, 23 Oct 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2017/10/23/sdes-simulator/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/10/23/sdes-simulator/</guid>
        
        <category>Kale</category>
        
        
      </item>
    
      <item>
        <title>React life cycle</title>
        <description>&lt;h3 id=&quot;작성중입니다&quot;&gt;작성중입니다.&lt;/h3&gt;
</description>
        <pubDate>Mon, 23 Oct 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2017/10/23/react-life-cycle/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/10/23/react-life-cycle/</guid>
        
        <category>Kale</category>
        
        
      </item>
    
      <item>
        <title>kakao chatbot</title>
        <description>&lt;h3 id=&quot;작성중입니다&quot;&gt;작성중입니다.&lt;/h3&gt;
</description>
        <pubDate>Mon, 23 Oct 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2017/10/23/kakaochatbot/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/10/23/kakaochatbot/</guid>
        
        <category>Kale</category>
        
        
      </item>
    
  </channel>
</rss>
