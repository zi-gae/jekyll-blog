---
layout: post
title: "django AWS 배포 - S3"
date: 2019-11-21
description:
image: /assets/images/aws_logo.jpg
author: Jeong geonwoo
tags:
  - aws
  - ec2
  - s3
---

## AWS django 배포 방법 2 - S3(for osX, mac)

<br/>
<br/>

#### AWS 버킷 생성
  
&nbsp; 1. 아마존 웹 서비스 [이동](https://aws.amazon.com)

&nbsp; 2. 로그인 후 서비스에서 S3를 클릭하여 아래의 버튼을 통해 버킷을 생성

![](/assets/images/aws_s3_bucket.png)

&nbsp; 3. `버킷 이름`을 입력하고 `리전`을 아시아 태평양(서울)로 지정 후 `다음` 클릭

![](/assets/images/aws_s3_region.png)

&nbsp; 4. 옵션 구성은 설정할게없음 `다음` 클릭

&nbsp; 5. 모든 퍼블릭 액세스 차단 체크 되어있으면 해체 후 안에 체크리스트 전부 해제 후 다음 클릭

![](/assets/images/aws_s3_access.png)

<br/>

&nbsp; 6. 다음 버킷만들기 클릭 하여 버킷 생성

---

<br/>

#### IAM 설정

&nbsp; 1. 아마존 상단 메뉴에서 서비스 버튼 클릭하여 IAM 클릭

&nbsp; 2. IAM 페이지로 이동하면 왼쪽에 있는 `사용자` 버튼 클릭

![](/assets/images/aws_s3_leftuser.png)

&nbsp; 3. `사용자 추가`버튼 클릭

![](/assets/images/aws_s3_adduser.png)
&nbsp; 4. 사용자 이름을 입력하고  액세스 유형은 프로그래밍 방식 엑세스에 체크 `다음:권한`버튼 클릭

![](/assets/images/aws_s3_nextauth.png)

<br/>

&nbsp; 5. 사용자에게 권한을 부여하기 위해 `그룹 생성` 버튼 클릭하고 그룹 이름을 입력하고 정책 필터에 s3를 입력하면 나오는 목록에서 AmazonS3FullAccess 체크 후 `그룹 생성` 버튼 클릭

![](/assets/images/aws_s3_creategroup.png)

<br/>

&nbsp; 6. 생성 완료되고 `다음: 검토` 버튼 클릭 내용을 확인하고 `사용자 만들기`버튼 클릭

&nbsp; 7. 생성이 완료된 후 나오는 마지막 페이지에서 엑세스 키는 다시 확인할 방법이 없으므로 액세스 키 ID와 비밀 엑세스 키는 보관하거나 csv 다운로드 버튼을 클릭해 파일로 다운로드

---

#### 장고에서 S3 연동하기

가상환경으로 진입 후 명령을 입력해 설치

    $ pip install boto3
    $ pip install django-storages

설치한 모듈들을 이용하기 위해 `settings.py`에 입력 또는 분리되어있다면 `config/settings/base.py` 에 입력
```python
INSTALLED_APPS = [
	...,
	...,
	‘storages’,
]
```

`settings.py` 또는 `base.py` 맨 아래에 추가
```python
AWS_ACCESS_KEY_ID = ‘아마존 액세스 ID’
AWS_SECRET_ACCESS_KEY = ‘아마존 액세스 비밀키’
AWS_REGION = ‘ap-northeast-2’ # 아시아 태평양(서울)
AWS_STORAGE_BUCKET_NAME = ‘S3 버킷 이름’
AWS_S3_CUSTOM_DOMAIN = ‘%s.s3.%s.amazonaws.com’ % (AWS_STORAGE_BUCKET_NAME, AWS_REGION)
AWS_S3_OBJECT_PARAMETERS = {
	‘CacheControl’: ‘max-age=86400’,
}
DEFAULT_FILE_STORAGE = ‘config.asset_storage.MediaStorage’
```

config 폴더에 `asset_storage.py` 라는 파일을 만든 후 다음 코드를 입력

```python
from storages.backends.s3boto3 import S3Boto3Storage

class MediaStorage(S3Boto3Storage):
	location = ‘media’ # s3 저장경로
	file_overwrite = False # 이름 그대로
```

---

##### 게시글이 길어져 Database server 생성은 다음 [게시글]()에서 진행